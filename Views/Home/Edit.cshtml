@model TodoList.Models.Todo

<nav class="container-fluid card navbar navbar-expand-lg bg-primary w-50 text-center" data-bs-theme="dark">

    <a class="navbar-brand mx-auto text-white" href="#">Edit ToDo</a>

</nav>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal text-center">
        <div class="container-fluid mt-4 w-50">
            <div class="card text-white">
                <div class="card-body">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Name, "What to do", htmlAttributes: new { @class = "d-inline text-primary" })
                        <div class="d-inline">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "d-inline text-primary" })
                        <div class="d-inline">
                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Attributes, "Personal or Business", htmlAttributes: new { @class = "d-inline text-primary" })
                        <div class="d-inline">
                            @Html.DropDownListFor(model => model.Attributes, new SelectList(
                        new List<Object>{
                        new { value = "Personal" , text = "Personal"  },
                        new { value = "Business" , text = "Business" },

                        },
                        "value",
                        "text",
                        1))

                            @Html.ValidationMessageFor(model => model.Attributes, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Priority, "How Important",htmlAttributes: new { @class = "d-inline text-primary" })
                        <div class="d-inline">
                            @Html.DropDownListFor(model => model.Priority, new SelectList(
                        new List<Object>{
                        new { value = "NOT TOO IMPORTANT" , text = "NOT TOO IMPORTANT"  },
                        new { value = "QUITE IMPORTANT" , text = "QUITE IMPORTANT" },
                        new { value = "URGENT" , text = "URGENT"}
                        },
                        "value",
                        "text",
                        2))

                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <div class="col-md-offset-2">
                            <input type="submit" value="Update" class="btn btn-lg btn-primary btn-outline-light" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

<div class="text-center">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>


